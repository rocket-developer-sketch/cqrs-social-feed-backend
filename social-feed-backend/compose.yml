version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: socialfeed
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass123wod
    volumes:
      - ../volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ../volumes/redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ../volumes/mongo:/data/db
# TODO mongodb healthcheck 아래 시도한 것 외 더 있는 지 찾아보기
#    volumes:
#      - mongo-data:/data/db
#    healthcheck:
      #test: ["CMD-SHELL", "bash -c '</dev/tcp/localhost/27017'"]
#      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
#      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
#      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
#      test: ["CMD", "sh", "-c", "exec 3<>/dev/tcp/localhost/27017"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ../volumes/zookeeper/data:/var/lib/zookeeper/data
      - ../volumes/zookeeper/datalog:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: [ "CMD", "echo", "ru", "|", "nc", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    volumes:
      - ../volumes/kafka:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-z", "kafka", "9092" ]
#      interval: 10s
      interval: 30s
      timeout: 5s
#      retries: 10
      retries: 12
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafkaUI
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT
  api:
    build:
      context: .
    container_name: socialfeed-api
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
#      mongo:
#        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: local